{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap a8f290eecf320e17c9da","webpack:///./enhance.js","webpack:///./src/CognitoAccessToken.js","webpack:///./src/CognitoIdToken.js","webpack:///./src/CognitoRefreshToken.js","webpack:///./src/CognitoTokenScopes.js","webpack:///./src/CognitoAuthSession.js","webpack:///./src/DecodingHelper.js","webpack:///./src/StorageHelper.js","webpack:///./~/@react-native-community/async-storage/lib/index.js","webpack:///./src/CognitoAuth.js","webpack:///./src/CookieStorage.js","webpack:///./src/DateHelper.js","webpack:///./src/UriHelper.js","webpack:///./src/index.js","webpack:///./~/js-cookie/src/js.cookie.js"],"names":["enhancements","window","crypto","msCrypto","CognitoAccessToken","AccessToken","jwtToken","payload","decodePayload","accessToken","undefined","jwtPayload","split","JSON","parse","exp","username","err","CognitoIdToken","IdToken","idToken","CognitoRefreshToken","RefreshToken","refreshToken","CognitoTokenScopes","TokenScopesArray","tokenScopes","CognitoAuthSession","TokenScopes","State","state","now","Math","floor","Date","getExpiration","e","decode","str","global","atob","dataMemory","MemoryStorage","key","value","Object","prototype","hasOwnProperty","call","LocalAsyncStorage","AsyncStorage","setItem","then","console","log","response","catch","StorageHelper","storageWindow","removeItem","exception","CognitoAuth","data","ClientId","AppWebDomain","RedirectUriSignIn","RedirectUriSignOut","IdentityProvider","UserPoolId","AdvancedSecurityDataCollectionFlag","Storage","LaunchUri","Error","getCognitoConstants","PARAMETERERROR","clientId","appWebDomain","Array","isArray","SCOPETYPEERROR","responseType","TOKEN","storage","getStorage","getLastUser","userPoolId","signInUserSession","getCachedSession","setTokenScopes","launchUri","advancedSecurityDataCollectionFlag","CognitoConstants","DOMAIN_SCHEME","DOMAIN_PATH_SIGNIN","DOMAIN_PATH_TOKEN","DOMAIN_PATH_SIGNOUT","DOMAIN_QUERY_PARAM_REDIRECT_URI","DOMAIN_QUERY_PARAM_SIGNOUT_URI","DOMAIN_QUERY_PARAM_RESPONSE_TYPE","DOMAIN_QUERY_PARAM_IDENTITY_PROVIDER","DOMAIN_QUERY_PARAM_USERCONTEXTDATA","CLIENT_ID","STATE","SCOPE","CODE","POST","QUESTIONMARK","POUNDSIGN","COLONDOUBLESLASH","SLASH","AMPERSAND","EQUALSIGN","SPACE","CONTENTTYPE","CONTENTTYPEVALUE","AUTHORIZATIONCODE","IDTOKEN","ACCESSTOKEN","REFRESHTOKEN","ERROR","ERROR_DESCRIPTION","STRINGTYPE","STATELENGTH","STATEORIGINSTRING","WITHCREDENTIALS","UNDEFINED","HOSTNAMEREGEX","QUERYPARAMETERREGEX1","QUERYPARAMETERREGEX2","HEADER","lastUserKey","lastAuthUser","getItem","Username","tokenScopesInputSet","Set","cachedScopesSet","getScopes","URL","getFQDNSignIn","isValid","userhandler","onSuccess","compareSets","setIdToken","setAccessToken","setRefreshToken","getRefreshToken","getToken","refreshSession","httpRequestResponse","map","indexOf","getQueryParameters","has","onFailure","get","getCodeQueryParameter","getTokenQueryParameter","setState","codeParameter","url","concat","getAppWebDomain","header","body","grant_type","client_id","getClientId","redirect_uri","code","boundOnSuccess","onSuccessExchangeForToken","bind","boundOnFailure","makePOSTRequest","setJwtToken","cacheTokensScopes","keyPrefix","idTokenKey","accessTokenKey","refreshTokenKey","scopeKey","scopesString","scopesArray","sessionData","cachedSession","lastUserName","tokenUserName","getAccessToken","getUsername","getTokenScopes","join","getIdToken","getJwtToken","set1","set2","size","item","match","length","splitMark","String","url2","str1","num","Map","i","set","chars","result","round","random","refresh_token","onSuccessRefreshToken","xhr","createCORSRequest","bodyString","setRequestHeader","substring","send","onreadystatechange","addressState","readyState","status","responseText","method","XMLHttpRequest","open","XDomainRequest","jsonData","jsonDataObject","id_token","access_token","tokenScopesString","encodeURIComponent","generateRandomString","identityProviderParam","getSpaceSeperatedScopeString","userContextDataParam","userContextData","getUserContextData","uri","getFQDNSignOut","clearCachedTokensScopes","AmazonCognitoAdvancedSecurityData","_username","_userpoolId","userpoolId","getData","Cookies","CookieStorage","domain","path","expires","secure","remove","cookies","index","monthNames","weekNames","DateHelper","weekDay","getUTCDay","month","getUTCMonth","day","getUTCDate","hours","getUTCHours","minutes","getUTCMinutes","seconds","getUTCSeconds","year","getUTCFullYear","dateNow","SELF","default"],"mappings":"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ACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA,SAAQ,sBAAsB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,eAAc;AACd;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,iCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,4DAA2D;AAC3D,8BAA6B,EAAE;AAC/B;;AAEA,UAAS,oBAAoB;AAC7B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA,KAAI;AACJ;;AAEA;;AAEA;AACA;;AAEA,4BAA2B;AAC3B,EAAC","file":"amazon-cognito-auth.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"AmazonCognitoIdentity\"] = factory();\n\telse\n\t\troot[\"AmazonCognitoIdentity\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a8f290eecf320e17c9da","/*!\n * Amazon Cognito Auth SDK for JavaScript\n * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n * Licensed under the Apache License, Version 2.0 (the \"License\").\n * You may not use this file except in compliance with the License.\n * A copy of the License is located at\n *\n *         http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file.\n * This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\n * OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions\n * and limitations under the License.\n */\n\nimport * as enhancements from './src';\n\nexport * from './src';\n\n// The version of crypto-browserify included by aws-sdk only\n// checks for window.crypto, not window.msCrypto as used by\n// IE 11 – so we set it explicitly here\nif (typeof window !== 'undefined' && !window.crypto && window.msCrypto) {\n  window.crypto = window.msCrypto;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./enhance.js","/*!\n * Amazon Cognito Auth SDK for JavaScript\n * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n * Licensed under the Apache License, Version 2.0 (the \"License\").\n * You may not use this file except in compliance with the License.\n * A copy of the License is located at\n *\n *         http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file.\n * This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\n * OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions\n * and limitations under the License.\n */\n\nimport { decode } from './DecodingHelper';\n\n/** @class */\nexport default class CognitoAccessToken {\n  /**\n   * Constructs a new CognitoAccessToken object\n   * @param {string=} AccessToken The JWT access token.\n   */\n  constructor(AccessToken) {\n    // Assign object\n    this.jwtToken = AccessToken || '';\n    this.payload = this.decodePayload();\n  }\n\n  /**\n   * @returns {string} the record's token.\n   */\n  getJwtToken() {\n    return this.jwtToken;\n  }\n\n  /**\n   * Sets new value for access token.\n   * @param {string=} accessToken The JWT access token.\n   * @returns {void}\n   */\n  setJwtToken(accessToken) {\n    this.jwtToken = accessToken;\n  }\n\n  /**\n   * @returns {int} the token's expiration (exp member).\n   */\n  getExpiration() {\n    if (this.jwtToken === null) {\n      return undefined;\n    }\n    const jwtPayload = this.jwtToken.split('.')[1];\n    return JSON.parse(decode(jwtPayload)).exp;\n  }\n\n  /**\n   * @returns {string} the username from payload.\n   */\n  getUsername() {\n    if (this.jwtToken === null) {\n      return undefined;\n    }\n    const jwtPayload = this.jwtToken.split('.')[1];\n    return JSON.parse(decode(jwtPayload)).username;\n  }\n\n  /**\n   * @returns {object} the token's payload.\n   */\n  decodePayload() {\n    const jwtPayload = this.jwtToken.split('.')[1];\n    try {\n      return JSON.parse(decode(jwtPayload));\n    } catch (err) {\n      return {};\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/CognitoAccessToken.js","/*!\n * Amazon Cognito Auth SDK for JavaScript\n * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\").\n * You may not use this file except in compliance with the License.\n * A copy of the License is located at\n *\n *         http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file.\n * This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\n * OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions\n * and limitations under the License.\n */\n\nimport { decode } from './DecodingHelper';\n\n/** @class */\nexport default class CognitoIdToken {\n  /**\n   * Constructs a new CognitoIdToken object\n   * @param {string=} IdToken The JWT Id token\n   */\n  constructor(IdToken) {\n    // Assign object\n    this.jwtToken = IdToken || '';\n    this.payload = this.decodePayload();\n  }\n\n  /**\n   * @returns {string} the record's token.\n   */\n  getJwtToken() {\n    return this.jwtToken;\n  }\n\n  /**\n   * Sets new value for id token.\n   * @param {string=} idToken The JWT Id token\n   * @returns {void}\n   */\n  setJwtToken(idToken) {\n    this.jwtToken = idToken;\n  }\n\n  /**\n   * @returns {int} the token's expiration (exp member).\n   */\n  getExpiration() {\n    if (this.jwtToken === null) {\n      return undefined;\n    }\n    const jwtPayload = this.jwtToken.split('.')[1];\n    return JSON.parse(decode(jwtPayload)).exp;\n  }\n\n  /**\n   * @returns {object} the token's payload.\n   */\n  decodePayload() {\n    const jwtPayload = this.jwtToken.split('.')[1];\n    try {\n      return JSON.parse(decode(jwtPayload));\n    } catch (err) {\n      return {};\n    }\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/CognitoIdToken.js","/*!\n * Amazon Cognito Auth SDK for JavaScript\n * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n * Licensed under the Apache License, Version 2.0 (the \"License\").\n * You may not use this file except in compliance with the License.\n * A copy of the License is located at\n *\n *         http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file.\n * This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\n * OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions\n * and limitations under the License.\n */\n\n/** @class */\nexport default class CognitoRefreshToken {\n  /**\n   * Constructs a new CognitoRefreshToken object\n   * @param {string=} RefreshToken The JWT refresh token.\n   */\n  constructor(RefreshToken) {\n    // Assign object\n    this.refreshToken = RefreshToken || '';\n  }\n\n  /**\n   * @returns {string} the record's token.\n   */\n  getToken() {\n    return this.refreshToken;\n  }\n\n  /**\n   * Sets new value for refresh token.\n   * @param {string=} refreshToken The JWT refresh token.\n   * @returns {void}\n   */\n  setToken(refreshToken) {\n    this.refreshToken = refreshToken;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/CognitoRefreshToken.js","/*!\n * Amazon Cognito Auth SDK for JavaScript\n * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n * Licensed under the Apache License, Version 2.0 (the \"License\").\n * You may not use this file except in compliance with the License.\n * A copy of the License is located at\n *\n *         http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file.\n * This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\n * OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions\n * and limitations under the License.\n */\n\n/** @class */\nexport default class CognitoTokenScopes {\n  /**\n   * Constructs a new CognitoTokenScopes object\n   * @param {array=} TokenScopesArray The token scopes\n   */\n  constructor(TokenScopesArray) {\n    // Assign object\n    this.tokenScopes = TokenScopesArray || [];\n  }\n\n  /**\n   * @returns {Array} the token scopes.\n   */\n  getScopes() {\n    return this.tokenScopes;\n  }\n\n  /**\n   * Sets new value for token scopes.\n   * @param {array=} tokenScopes The token scopes\n   * @returns {void}\n   */\n  setTokenScopes(tokenScopes) {\n    this.tokenScopes = tokenScopes;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/CognitoTokenScopes.js","/*!\n * Amazon Cognito Auth SDK for JavaScript\n * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n * Licensed under the Apache License, Version 2.0 (the \"License\").\n * You may not use this file except in compliance with the License.\n * A copy of the License is located at\n *\n *         http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file.\n * This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\n * OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions\n * and limitations under the License.\n */\n\nimport CognitoTokenScopes from './CognitoTokenScopes';\nimport CognitoAccessToken from './CognitoAccessToken';\nimport CognitoIdToken from './CognitoIdToken';\nimport CognitoRefreshToken from './CognitoRefreshToken';\n\n/** @class */\nexport default class CognitoAuthSession {\n\t/**\n\t * Constructs a new CognitoUserSession object\n\t * @param {CognitoIdToken} IdToken The session's Id token.\n\t * @param {CognitoRefreshToken} RefreshToken The session's refresh token.\n\t * @param {CognitoAccessToken} AccessToken The session's access token.\n\t * @param {array}  TokenScopes  The session's token scopes.\n   * @param {string} State The session's state. \n\t */\n  constructor({ IdToken, RefreshToken, AccessToken, TokenScopes, State } = {}) {\n    if (IdToken) {\n      this.idToken = IdToken;\n    } else {\n      this.idToken = new CognitoIdToken();\n    }\n    if (RefreshToken) {\n      this.refreshToken = RefreshToken;\n    } else {\n      this.refreshToken = new CognitoRefreshToken();\n    }\n    if (AccessToken) {\n      this.accessToken = AccessToken;\n    } else {\n      this.accessToken = new CognitoAccessToken();\n    }\n    if (TokenScopes) {\n      this.tokenScopes = TokenScopes;\n    } else {\n      this.tokenScopes = new CognitoTokenScopes();\n    }\n    if (State) {\n      this.state = State;\n    } else {\n      this.state = null;\n    }\n  }\n\n  /**\n   * @returns {CognitoIdToken} the session's Id token\n   */\n  getIdToken() {\n    return this.idToken;\n  }\n\n  /**\n   * Set a new Id token\n   * @param {CognitoIdToken} IdToken The session's Id token.\n   * @returns {void}\n   */\n  setIdToken(IdToken) {\n    this.idToken = IdToken;\n  }\n\n  /**\n   * @returns {CognitoRefreshToken} the session's refresh token\n   */\n  getRefreshToken() {\n    return this.refreshToken;\n  }\n\n  /**\n   * Set a new Refresh token\n   * @param {CognitoRefreshToken} RefreshToken The session's refresh token.\n   * @returns {void}\n   */\n  setRefreshToken(RefreshToken) {\n    this.refreshToken = RefreshToken;\n  }\n\n  /**\n   * @returns {CognitoAccessToken} the session's access token\n   */\n  getAccessToken() {\n    return this.accessToken;\n  }\n\n  /**\n   * Set a new Access token\n   * @param {CognitoAccessToken} AccessToken The session's access token.\n   * @returns {void}\n   */\n  setAccessToken(AccessToken) {\n    this.accessToken = AccessToken;\n  }\n\n  /**\n   * @returns {CognitoTokenScopes} the session's token scopes\n   */\n  getTokenScopes() {\n    return this.tokenScopes;\n  }\n\n  /**\n   * Set new token scopes\n   * @param {array}  tokenScopes  The session's token scopes.\n   * @returns {void}\n   */\n  setTokenScopes(tokenScopes) {\n    this.tokenScopes = tokenScopes;\n  }\n\n  /**\n   * @returns {string} the session's state\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Set new state\n   * @param {string}  state  The session's state.\n   * @returns {void}\n   */\n  setState(State) {\n    this.state = State;\n  }\n\n  /**\n   * Checks to see if the session is still valid based on session expiry information found\n   * in Access and Id Tokens and the current time\n   * @returns {boolean} if the session is still valid\n   */\n  isValid() {\n    const now = Math.floor(new Date() / 1000);\n    try {\n      if (this.accessToken != null) {\n        return now < this.accessToken.getExpiration();\n      }\n      if (this.idToken != null) {\n        return now < this.idToken.getExpiration();\n      }\n      return false;\n    } catch (e) {\n      return false;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/CognitoAuthSession.js","export const decode = (str) => global.atob(str);\n\n\n\n// WEBPACK FOOTER //\n// ./src/DecodingHelper.js","/*!\n * Amazon Cognito Auth SDK for JavaScript\n * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n * Licensed under the Apache License, Version 2.0 (the \"License\").\n * You may not use this file except in compliance with the License.\n * A copy of the License is located at\n *\n *         http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file.\n * This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\n * OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions\n * and limitations under the License.\n */\nimport AsyncStorage from '@react-native-community/async-storage';\n\nlet dataMemory = {};\n\n/** @class */\nclass MemoryStorage {\n\n  /**\n   * This is used to set a specific item in storage\n   * @param {string} key - the key for the item\n   * @param {object} value - the value\n   * @returns {string} value that was set\n   */\n  static setItem(key, value) {\n    dataMemory[key] = value;\n    return dataMemory[key];\n  }\n\n  /**\n   * This is used to get a specific key from storage\n   * @param {string} key - the key for the item\n   * This is used to clear the storage\n   * @returns {string} the data item\n   */\n  static getItem(key) {\n    return Object.prototype.hasOwnProperty.call(dataMemory, key) ? dataMemory[key] : undefined;\n  }\n\n  /**\n   * This is used to remove an item from storage\n   * @param {string} key - the key being set\n   * @returns {string} value - value that was deleted\n   */\n  static removeItem(key) {\n    return delete dataMemory[key];\n  }\n\n  /**\n   * This is used to clear the storage\n   * @returns {string} nothing\n   */\n  static clear() {\n    dataMemory = {};\n    return dataMemory;\n  }\n}\n\n/** @class */\nclass LocalAsyncStorage {\n\n  /**\n   * This is used to set a specific item in storage\n   * @param {string} key - the key for the item\n   * @param {object} value - the value\n   * @returns {string} value that was set\n   */\n  static setItem(key, value) {\n\n    AsyncStorage.setItem(key, value)\n      .then(response => {\n        console.log('stored key');\n        console.log(response)\n      }).catch(err => {\n        console.log(err);\n      })\n    // dataMemory[key] = value;\n    // return dataMemory[key];\n  }\n\n  /**\n   * This is used to get a specific key from storage\n   * @param {string} key - the key for the item\n   * This is used to clear the storage\n   * @returns {string} the data item\n   */\n  static getItem(key) {\n    AsyncStorage.setItem(key, value)\n      .then(response => {\n        console.log('stored key');\n        console.log(response)\n      }).catch(err => {\n        console.log(err);\n      })\n    //return Object.prototype.hasOwnProperty.call(dataMemory, key) ? dataMemory[key] : undefined;\n  }\n\n  /**\n   * This is used to remove an item from storage\n   * @param {string} key - the key being set\n   * @returns {string} value - value that was deleted\n   */\n  static removeItem(key) {\n    AsyncStorage.setItem(key, '')\n      .then(response => {\n        console.log('deleted key');\n        console.log(response)\n      }).catch(err => {\n        console.log(err);\n      })\n    //return delete dataMemory[key];\n  }\n\n  /**\n   * This is used to clear the storage\n   * @returns {string} nothing\n   */\n  static clear() {\n    dataMemory = {};\n    return dataMemory;\n  }\n}\n\n\n/** @class */\nexport default class StorageHelper {\n\n  /**\n   * This is used to get a storage object\n   * @returns {object} the storage\n   */\n  constructor() {\n    try {\n      this.storageWindow = LocalAsyncStorage;\n      this.storageWindow.setItem('aws.cognito.test-ls', 1);\n      this.storageWindow.removeItem('aws.cognito.test-ls');\n    } catch (exception) {\n      this.storageWindow = MemoryStorage;\n    }\n  }\n\n  /**\n   * This is used to return the storage\n   * @returns {object} the storage\n   */\n  getStorage() {\n    return this.storageWindow;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/StorageHelper.js","/**\n * @format\n */\n\nimport AsyncStorage from './AsyncStorage';\n\nexport default AsyncStorage;\nexport {useAsyncStorage} from './hooks';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@react-native-community/async-storage/lib/index.js\n// module id = 8\n// module chunks = 0","/*!\n  * Amazon Cognito Auth SDK for JavaScript\n  * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\").\n  * You may not use this file except in compliance with the License.\n  * A copy of the License is located at\n  *\n  *         http://aws.amazon.com/apache2.0/\n  *\n  * or in the \"license\" file accompanying this file.\n  * This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\n  * OR CONDITIONS OF ANY KIND, either express or implied. See the\n  * License for the specific language governing permissions\n  * and limitations under the License.\n  */\n\nimport CognitoTokenScopes from './CognitoTokenScopes';\nimport CognitoAccessToken from './CognitoAccessToken';\nimport CognitoIdToken from './CognitoIdToken';\nimport CognitoRefreshToken from './CognitoRefreshToken';\nimport CognitoAuthSession from './CognitoAuthSession';\nimport StorageHelper from './StorageHelper';\nimport { launchUri } from './UriHelper';\n\n/** @class */\nexport default class CognitoAuth {\n  /**\n   * Constructs a new CognitoAuth object\n   * @param {object} data Creation options\n   * @param {string} data.ClientId Required: User pool application client id.\n   * @param {string} data.AppWebDomain Required: The application/user-pools Cognito web hostname,\n   *                     this is set at the Cognito console.\n   * @param {array} data.TokenScopesArray Optional: The token scopes\n   * @param {string} data.RedirectUriSignIn Required: The redirect Uri,\n   * which will be launched after authentication as signed in.\n   * @param {string} data.RedirectUriSignOut Required:\n   * The redirect Uri, which will be launched when signed out.\n   * @param {string} data.IdentityProvider Optional: Pre-selected identity provider (this allows to\n   * automatically trigger social provider authentication flow).\n   * @param {string} data.UserPoolId Optional: UserPoolId for the configured cognito userPool.\n   * @param {boolean} data.AdvancedSecurityDataCollectionFlag Optional: boolean flag indicating if the\n   *        data collection is enabled to support cognito advanced security features. By default, this\n   *        flag is set to true.\n   * @param {object} data.Storage Optional: e.g. new CookieStorage(), to use the specified storage provided\n   * @param {function} data.LaunchUri Optional: Function to open a url, by default uses window.open in browser, Linking.openUrl in React Native\n   * @param {nodeCallback<CognitoAuthSession>} Optional: userhandler Called on success or error.\n   */\n  constructor(data) {\n    const { ClientId, AppWebDomain, TokenScopesArray,\n      RedirectUriSignIn, RedirectUriSignOut, IdentityProvider, UserPoolId,\n      AdvancedSecurityDataCollectionFlag, Storage, LaunchUri } = data || {};\n    if (data == null || !ClientId || !AppWebDomain || !RedirectUriSignIn || !RedirectUriSignOut) {\n      throw new Error(this.getCognitoConstants().PARAMETERERROR);\n    }\n\n    this.clientId = ClientId;\n    this.appWebDomain = AppWebDomain;\n    this.TokenScopesArray = TokenScopesArray || [];\n    if (!Array.isArray(TokenScopesArray)) {\n      throw new Error(this.getCognitoConstants().SCOPETYPEERROR);\n    }\n    const tokenScopes = new CognitoTokenScopes(this.TokenScopesArray);\n    this.RedirectUriSignIn = RedirectUriSignIn;\n    this.RedirectUriSignOut = RedirectUriSignOut;\n    this.IdentityProvider = IdentityProvider;\n    this.responseType = this.getCognitoConstants().TOKEN;\n    this.storage = Storage || new StorageHelper().getStorage();\n    this.username = this.getLastUser();\n    this.userPoolId = UserPoolId;\n    this.signInUserSession = this.getCachedSession();\n    this.signInUserSession.setTokenScopes(tokenScopes);\n    this.launchUri = typeof LaunchUri === 'function' ? LaunchUri : launchUri;\n\n    /**\n     * By default, AdvancedSecurityDataCollectionFlag is set to true, if no input value is provided.\n     */\n    this.advancedSecurityDataCollectionFlag = true;\n    if (AdvancedSecurityDataCollectionFlag) {\n      this.advancedSecurityDataCollectionFlag = AdvancedSecurityDataCollectionFlag;\n    }\n  }\n\n  /**\n   * @returns {JSON} the constants\n   */\n  getCognitoConstants() {\n    const CognitoConstants = {\n      DOMAIN_SCHEME: 'https',\n      DOMAIN_PATH_SIGNIN: 'oauth2/authorize',\n      DOMAIN_PATH_TOKEN: 'oauth2/token',\n      DOMAIN_PATH_SIGNOUT: 'logout',\n      DOMAIN_QUERY_PARAM_REDIRECT_URI: 'redirect_uri',\n      DOMAIN_QUERY_PARAM_SIGNOUT_URI: 'logout_uri',\n      DOMAIN_QUERY_PARAM_RESPONSE_TYPE: 'response_type',\n      DOMAIN_QUERY_PARAM_IDENTITY_PROVIDER: 'identity_provider',\n      DOMAIN_QUERY_PARAM_USERCONTEXTDATA: 'userContextData',\n      CLIENT_ID: 'client_id',\n      STATE: 'state',\n      SCOPE: 'scope',\n      TOKEN: 'token',\n      CODE: 'code',\n      POST: 'POST',\n      PARAMETERERROR: 'The parameters: App client Id, App web domain' +\n        ', the redirect URL when you are signed in and the ' +\n        'redirect URL when you are signed out are required.',\n      SCOPETYPEERROR: 'Scopes have to be array type. ',\n      QUESTIONMARK: '?',\n      POUNDSIGN: '#',\n      COLONDOUBLESLASH: '://',\n      SLASH: '/',\n      AMPERSAND: '&',\n      EQUALSIGN: '=',\n      SPACE: ' ',\n      CONTENTTYPE: 'Content-Type',\n      CONTENTTYPEVALUE: 'application/x-www-form-urlencoded',\n      AUTHORIZATIONCODE: 'authorization_code',\n      IDTOKEN: 'id_token',\n      ACCESSTOKEN: 'access_token',\n      REFRESHTOKEN: 'refresh_token',\n      ERROR: 'error',\n      ERROR_DESCRIPTION: 'error_description',\n      STRINGTYPE: 'string',\n      STATELENGTH: 32,\n      STATEORIGINSTRING: '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ',\n      WITHCREDENTIALS: 'withCredentials',\n      UNDEFINED: 'undefined',\n      HOSTNAMEREGEX: /:\\/\\/([0-9]?\\.)?(.[^/:]+)/i,\n      QUERYPARAMETERREGEX1: /#(.+)/,\n      QUERYPARAMETERREGEX2: /=(.+)/,\n      HEADER: { 'Content-Type': 'application/x-www-form-urlencoded' },\n    };\n    return CognitoConstants;\n  }\n\n  /**\n   * @returns {string} the client id\n   */\n  getClientId() {\n    return this.clientId;\n  }\n\n  /**\n   * @returns {string} the app web domain\n   */\n  getAppWebDomain() {\n    return this.appWebDomain;\n  }\n\n  /**\n   * method for getting the current user of the application from the local storage\n   *\n   * @returns {CognitoAuth} the user retrieved from storage\n   */\n  getCurrentUser() {\n    const lastUserKey = `CognitoIdentityServiceProvider.${this.clientId}.LastAuthUser`;\n\n    const lastAuthUser = this.storage.getItem(lastUserKey);\n    return lastAuthUser;\n  }\n\n  /**\n   * @param {string} Username the user's name\n   * method for setting the current user's name\n   * @returns {void}\n   */\n  setUser(Username) {\n    this.username = Username;\n  }\n\n  /**\n   * sets response type to 'code'\n   * @returns {void}\n   */\n  useCodeGrantFlow() {\n    this.responseType = this.getCognitoConstants().CODE;\n  }\n\n  /**\n   * sets response type to 'token'\n   * @returns {void}\n   */\n  useImplicitFlow() {\n    this.responseType = this.getCognitoConstants().TOKEN;\n  }\n\n  /**\n   * @returns {CognitoAuthSession} the current session for this user\n   */\n  getSignInUserSession() {\n    return this.signInUserSession;\n  }\n\n  /**\n   * @returns {string} the user's username\n   */\n  getUsername() {\n    return this.username;\n  }\n\n  /**\n   * @param {string} Username the user's username\n   * @returns {void}\n   */\n  setUsername(Username) {\n    this.username = Username;\n  }\n\n  /**\n   * @returns {string} the user's state\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * @param {string} State the user's state\n   * @returns {void}\n   */\n  setState(State) {\n    this.state = State;\n  }\n\n  /**\n   * This is used to get a session, either from the session object\n   * or from the local storage, or by using a refresh token\n   * @param {string} RedirectUriSignIn Required: The redirect Uri,\n   * which will be launched after authentication.\n   * @param {array} TokenScopesArray Required: The token scopes, it is an\n   * array of strings specifying all scopes for the tokens.\n   * @returns {void}\n   */\n  getSession() {\n    const tokenScopesInputSet = new Set(this.TokenScopesArray);\n    const cachedScopesSet = new Set(this.signInUserSession.tokenScopes.getScopes());\n    const URL = this.getFQDNSignIn();\n    if (this.signInUserSession != null && this.signInUserSession.isValid()) {\n      return this.userhandler.onSuccess(this.signInUserSession);\n    }\n    this.signInUserSession = this.getCachedSession();\n    // compare scopes\n    if (!this.compareSets(tokenScopesInputSet, cachedScopesSet)) {\n      const tokenScopes = new CognitoTokenScopes(this.TokenScopesArray);\n      const idToken = new CognitoIdToken();\n      const accessToken = new CognitoAccessToken();\n      const refreshToken = new CognitoRefreshToken();\n      this.signInUserSession.setTokenScopes(tokenScopes);\n      this.signInUserSession.setIdToken(idToken);\n      this.signInUserSession.setAccessToken(accessToken);\n      this.signInUserSession.setRefreshToken(refreshToken);\n      this.launchUri(URL);\n    } else if (this.signInUserSession.isValid()) {\n      return this.userhandler.onSuccess(this.signInUserSession);\n    } else if (!this.signInUserSession.getRefreshToken()\n      || !this.signInUserSession.getRefreshToken().getToken()) {\n      this.launchUri(URL);\n    } else {\n      this.refreshSession(this.signInUserSession.getRefreshToken().getToken());\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {string} httpRequestResponse the http request response\n   * @returns {void}\n   * Parse the http request response and proceed according to different response types.\n   */\n  parseCognitoWebResponse(httpRequestResponse) {\n    let map;\n    if (httpRequestResponse.indexOf(this.getCognitoConstants().QUESTIONMARK) > -1) { // for code type\n      // this is to avoid a bug exists when sign in with Google or facebook\n      // Sometimes the code will contain a poundsign in the end which breaks the parsing\n      const response = (httpRequestResponse.split(this.getCognitoConstants().POUNDSIGN))[0];\n      map = this.getQueryParameters(\n        response,\n        this.getCognitoConstants().QUESTIONMARK\n      );\n      if (map.has(this.getCognitoConstants().ERROR)) {\n        return this.userhandler.onFailure(map.get(this.getCognitoConstants().ERROR_DESCRIPTION));\n      }\n      this.getCodeQueryParameter(map);\n    } else if (httpRequestResponse.indexOf(this.getCognitoConstants().POUNDSIGN) > -1) { // for token type\n      map = this.getQueryParameters(\n        httpRequestResponse,\n        this.getCognitoConstants().QUERYPARAMETERREGEX1\n      );\n      if (map.has(this.getCognitoConstants().ERROR)) {\n        return this.userhandler.onFailure(map.get(this.getCognitoConstants().ERROR_DESCRIPTION));\n      }\n      // To use the map to get tokens\n      this.getTokenQueryParameter(map);\n    }\n  }\n\n  /**\n   * @param {map} Query parameter map \n   * @returns {void}\n   * Get the query parameter map and proceed according to code response type.\n   */\n  getCodeQueryParameter(map) {\n    const state = null;\n    if (map.has(this.getCognitoConstants().STATE)) {\n      this.signInUserSession.setState(map.get(this.getCognitoConstants().STATE));\n    } else {\n      this.signInUserSession.setState(state);\n    }\n\n    if (map.has(this.getCognitoConstants().CODE)) {\n      // if the response contains code\n      // To parse the response and get the code value.\n      const codeParameter = map.get(this.getCognitoConstants().CODE);\n      const url = this.getCognitoConstants().DOMAIN_SCHEME.concat(\n        this.getCognitoConstants().COLONDOUBLESLASH, this.getAppWebDomain(),\n        this.getCognitoConstants().SLASH, this.getCognitoConstants().DOMAIN_PATH_TOKEN);\n      const header = this.getCognitoConstants().HEADER;\n      const body = {\n        grant_type: this.getCognitoConstants().AUTHORIZATIONCODE,\n        client_id: this.getClientId(),\n        redirect_uri: this.RedirectUriSignIn,\n        code: codeParameter\n      };\n      const boundOnSuccess = (this.onSuccessExchangeForToken).bind(this);\n      const boundOnFailure = (this.onFailure).bind(this);\n      this.makePOSTRequest(header, body, url, boundOnSuccess, boundOnFailure);\n    }\n  }\n\n  /**\n   * Get the query parameter map and proceed according to token response type.\n   * @param {map} Query parameter map \n   * @returns {void}\n   */\n  getTokenQueryParameter(map) {\n    const idToken = new CognitoIdToken();\n    const accessToken = new CognitoAccessToken();\n    const refreshToken = new CognitoRefreshToken();\n    const state = null;\n    if (map.has(this.getCognitoConstants().IDTOKEN)) {\n      idToken.setJwtToken(map.get(this.getCognitoConstants().IDTOKEN));\n      this.signInUserSession.setIdToken(idToken);\n    } else {\n      this.signInUserSession.setIdToken(idToken);\n    }\n    if (map.has(this.getCognitoConstants().ACCESSTOKEN)) {\n      accessToken.setJwtToken(map.get(this.getCognitoConstants().ACCESSTOKEN));\n      this.signInUserSession.setAccessToken(accessToken);\n    } else {\n      this.signInUserSession.setAccessToken(accessToken);\n    }\n    if (map.has(this.getCognitoConstants().STATE)) {\n      this.signInUserSession.setState(map.get(this.getCognitoConstants().STATE));\n    } else {\n      this.signInUserSession.setState(state);\n    }\n    this.cacheTokensScopes();\n    this.userhandler.onSuccess(this.signInUserSession);\n  }\n\n  /**\n   * Get cached tokens and scopes and return a new session using all the cached data.\n   * @returns {CognitoAuthSession} the auth session\n   */\n  getCachedSession() {\n    if (!this.username) {\n      return new CognitoAuthSession();\n    }\n    const keyPrefix = `CognitoIdentityServiceProvider.${this.getClientId()}.${this.username}`;\n    const idTokenKey = `${keyPrefix}.idToken`;\n    const accessTokenKey = `${keyPrefix}.accessToken`;\n    const refreshTokenKey = `${keyPrefix}.refreshToken`;\n    const scopeKey = `${keyPrefix}.tokenScopesString`;\n\n    const scopesString = this.storage.getItem(scopeKey);\n    let scopesArray = [];\n    if (scopesString) {\n      scopesArray = scopesString.split(' ');\n    }\n    const tokenScopes = new CognitoTokenScopes(scopesArray);\n    const idToken = new CognitoIdToken(this.storage.getItem(idTokenKey));\n    const accessToken = new CognitoAccessToken(this.storage.getItem(accessTokenKey));\n    const refreshToken = new CognitoRefreshToken(this.storage.getItem(refreshTokenKey));\n\n    const sessionData = {\n      IdToken: idToken,\n      AccessToken: accessToken,\n      RefreshToken: refreshToken,\n      TokenScopes: tokenScopes,\n    };\n    const cachedSession = new CognitoAuthSession(sessionData);\n    return cachedSession;\n  }\n\n  /**\n   * This is used to get last signed in user from local storage\n   * @returns {string} the last user name\n   */\n  getLastUser() {\n    const keyPrefix = `CognitoIdentityServiceProvider.${this.getClientId()}`;\n    const lastUserKey = `${keyPrefix}.LastAuthUser`;\n    const lastUserName = this.storage.getItem(lastUserKey);\n    if (lastUserName) {\n      return lastUserName;\n    }\n    return undefined;\n  }\n\n  /**\n   * This is used to save the session tokens and scopes to local storage\n   * Input parameter is a set of strings.\n   * @returns {void}\n   */\n  cacheTokensScopes() {\n    const keyPrefix = `CognitoIdentityServiceProvider.${this.getClientId()}`;\n    const tokenUserName = this.signInUserSession.getAccessToken().getUsername();\n    this.username = tokenUserName;\n    const idTokenKey = `${keyPrefix}.${tokenUserName}.idToken`;\n    const accessTokenKey = `${keyPrefix}.${tokenUserName}.accessToken`;\n    const refreshTokenKey = `${keyPrefix}.${tokenUserName}.refreshToken`;\n    const lastUserKey = `${keyPrefix}.LastAuthUser`;\n    const scopeKey = `${keyPrefix}.${tokenUserName}.tokenScopesString`;\n    const scopesArray = this.signInUserSession.getTokenScopes().getScopes();\n    const scopesString = scopesArray.join(' ');\n    this.storage.setItem(idTokenKey, this.signInUserSession.getIdToken().getJwtToken());\n    this.storage.setItem(accessTokenKey, this.signInUserSession.getAccessToken().getJwtToken());\n    this.storage.setItem(refreshTokenKey, this.signInUserSession.getRefreshToken().getToken());\n    this.storage.setItem(lastUserKey, tokenUserName);\n    this.storage.setItem(scopeKey, scopesString);\n  }\n\n  /**\n   * Compare two sets if they are identical.\n   * @param {set} set1 one set\n   * @param {set} set2 the other set\n   * @returns {boolean} boolean value is true if two sets are identical\n   */\n  compareSets(set1, set2) {\n    if (set1.size !== set2.size) {\n      return false;\n    }\n    for (const item of set1) {\n      if (!set2.has(item)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * @param {string} url the url string\n   * Get the hostname from url.\n   * @returns {string} hostname string\n   */\n  getHostName(url) {\n    const match = url.match(this.getCognitoConstants().HOSTNAMEREGEX);\n    if (match != null && match.length > 2 && typeof match[2] ===\n      this.getCognitoConstants().STRINGTYPE && match[2].length > 0) {\n      return match[2];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get http query parameters and return them as a map.\n   * @param {string} url the url string\n   * @param {string} splitMark query parameters split mark (prefix)\n   * @returns {map} map\n   */\n  getQueryParameters(url, splitMark) {\n    const str = String(url).split(splitMark);\n    const url2 = str[1];\n    const str1 = String(url2).split(this.getCognitoConstants().AMPERSAND);\n    const num = str1.length;\n    const map = new Map();\n    let i;\n    for (i = 0; i < num; i++) {\n      str1[i] = String(str1[i]).split(this.getCognitoConstants().QUERYPARAMETERREGEX2);\n      map.set(str1[i][0], str1[i][1]);\n    }\n    return map;\n  }\n\n  /**\n   * helper function to generate a random string\n   * @param {int} length the length of string\n   * @param {string} chars a original string\n   * @returns {string} a random value.\n   */\n  generateRandomString(length, chars) {\n    let result = '';\n    let i = length;\n    for (; i > 0; --i) result += chars[Math.round(Math.random() * (chars.length - 1))];\n    return result;\n  }\n\n  /**\n   * This is used to clear the session tokens and scopes from local storage\n   * @returns {void}\n   */\n  clearCachedTokensScopes() {\n    const keyPrefix = `CognitoIdentityServiceProvider.${this.getClientId()}`;\n    const idTokenKey = `${keyPrefix}.${this.username}.idToken`;\n    const accessTokenKey = `${keyPrefix}.${this.username}.accessToken`;\n    const refreshTokenKey = `${keyPrefix}.${this.username}.refreshToken`;\n    const lastUserKey = `${keyPrefix}.LastAuthUser`;\n    const scopeKey = `${keyPrefix}.${this.username}.tokenScopesString`;\n\n    this.storage.removeItem(idTokenKey);\n    this.storage.removeItem(accessTokenKey);\n    this.storage.removeItem(refreshTokenKey);\n    this.storage.removeItem(lastUserKey);\n    this.storage.removeItem(scopeKey);\n  }\n\n  /**\n   * This is used to build a user session from tokens retrieved in the authentication result\n   * @param {object} refreshToken authResult Successful auth response from server.\n   * @returns {void}\n   */\n  refreshSession(refreshToken) {\n    // https POST call for refreshing token\n    const url = this.getCognitoConstants().DOMAIN_SCHEME.concat(\n      this.getCognitoConstants().COLONDOUBLESLASH, this.getAppWebDomain(),\n      this.getCognitoConstants().SLASH, this.getCognitoConstants().DOMAIN_PATH_TOKEN);\n    const header = this.getCognitoConstants().HEADER;\n    const body = {\n      grant_type: this.getCognitoConstants().REFRESHTOKEN,\n      client_id: this.getClientId(),\n      redirect_uri: this.RedirectUriSignIn,\n      refresh_token: refreshToken\n    };\n    const boundOnSuccess = (this.onSuccessRefreshToken).bind(this);\n    const boundOnFailure = (this.onFailure).bind(this);\n    this.makePOSTRequest(header, body, url, boundOnSuccess, boundOnFailure);\n  }\n\n  /**\n   * Make the http POST request.\n   * @param {JSON} header header JSON object\n   * @param {JSON} body body JSON object\n   * @param {string} url string\n   * @param {function} onSuccess callback\n   * @param {function} onFailure callback\n   * @returns {void}\n   */\n  makePOSTRequest(header, body, url, onSuccess, onFailure) {\n    // This is a sample server that supports CORS.\n    const xhr = this.createCORSRequest(this.getCognitoConstants().POST, url);\n    let bodyString = '';\n    if (!xhr) {\n      return;\n    }\n    // set header\n    for (let key in header) {\n      xhr.setRequestHeader(key, header[key]);\n    }\n    for (let key in body) {\n      bodyString = bodyString.concat(key, this.getCognitoConstants().EQUALSIGN,\n        body[key], this.getCognitoConstants().AMPERSAND);\n    }\n    bodyString = bodyString.substring(0, bodyString.length - 1);\n    xhr.send(bodyString);\n    xhr.onreadystatechange = function addressState() {\n      if (xhr.readyState === 4) {\n        if (xhr.status === 200) {\n          onSuccess(xhr.responseText);\n        } else {\n          onFailure(xhr.responseText);\n        }\n      }\n    };\n  }\n\n  /**\n   * Create the XHR object\n   * @param {string} method which method to call\n   * @param {string} url the url string\n   * @returns {object} xhr\n   */\n  createCORSRequest(method, url) {\n    let xhr = new XMLHttpRequest();\n    if (this.getCognitoConstants().WITHCREDENTIALS in xhr) {\n      // XHR for Chrome/Firefox/Opera/Safari.\n      xhr.open(method, url, true);\n    } else if (typeof XDomainRequest !== this.getCognitoConstants().UNDEFINED) {\n      // XDomainRequest for IE.\n      xhr = new XDomainRequest();\n      xhr.open(method, url);\n    } else {\n      // CORS not supported.\n      xhr = null;\n    }\n    return xhr;\n  }\n\n  /**\n   * The http POST request onFailure callback.\n   * @param {object} err the error object\n   * @returns {function} onFailure\n   */\n  onFailure(err) {\n    this.userhandler.onFailure(err);\n  }\n\n  /**\n   * The http POST request onSuccess callback when refreshing tokens.\n   * @param {JSON} jsonData tokens\n   */\n  onSuccessRefreshToken(jsonData) {\n    const jsonDataObject = JSON.parse(jsonData);\n    if (Object.prototype.hasOwnProperty.call(jsonDataObject,\n      this.getCognitoConstants().ERROR)) {\n      const URL = this.getFQDNSignIn();\n      this.launchUri(URL);\n    } else {\n      if (Object.prototype.hasOwnProperty.call(jsonDataObject,\n        this.getCognitoConstants().IDTOKEN)) {\n        this.signInUserSession.setIdToken(new\n          CognitoIdToken(jsonDataObject.id_token));\n      }\n      if (Object.prototype.hasOwnProperty.call(jsonDataObject,\n        this.getCognitoConstants().ACCESSTOKEN)) {\n        this.signInUserSession.setAccessToken(new\n          CognitoAccessToken(jsonDataObject.access_token));\n      }\n      this.cacheTokensScopes();\n      this.userhandler.onSuccess(this.signInUserSession);\n    }\n  }\n\n  /**\n   * The http POST request onSuccess callback when exchanging code for tokens.\n   * @param {JSON} jsonData tokens\n   */\n  onSuccessExchangeForToken(jsonData) {\n    const jsonDataObject = JSON.parse(jsonData);\n    const refreshToken = new CognitoRefreshToken();\n    const accessToken = new CognitoAccessToken();\n    const idToken = new CognitoIdToken();\n    const state = null;\n    if (Object.prototype.hasOwnProperty.call(jsonDataObject,\n      this.getCognitoConstants().ERROR)) {\n      return this.userhandler.onFailure(jsonData);\n    }\n    if (Object.prototype.hasOwnProperty.call(jsonDataObject,\n      this.getCognitoConstants().IDTOKEN)) {\n      this.signInUserSession.setIdToken(\n        new CognitoIdToken(jsonDataObject.id_token));\n    } else {\n      this.signInUserSession.setIdToken(idToken);\n    }\n    if (Object.prototype.hasOwnProperty.call(jsonDataObject,\n      this.getCognitoConstants().ACCESSTOKEN)) {\n      this.signInUserSession.setAccessToken(new\n        CognitoAccessToken(jsonDataObject.access_token));\n    } else {\n      this.signInUserSession.setAccessToken(accessToken);\n    }\n    if (Object.prototype.hasOwnProperty.call(jsonDataObject,\n      this.getCognitoConstants().REFRESHTOKEN)) {\n      this.signInUserSession.setRefreshToken(new\n        CognitoRefreshToken(jsonDataObject.refresh_token));\n    } else {\n      this.signInUserSession.setRefreshToken(refreshToken);\n    }\n    this.cacheTokensScopes();\n    this.userhandler.onSuccess(this.signInUserSession);\n  }\n\n  /**\n   * Launch Cognito Auth UI page.\n   * @param {string} URL the url to launch\n   * @returns {void}\n   */\n  launchUri() { }; // overwritten in constructor\n\n  /**\n   * @returns {string} scopes string\n   */\n  getSpaceSeperatedScopeString() {\n    let tokenScopesString = this.signInUserSession.getTokenScopes().getScopes();\n    tokenScopesString = tokenScopesString.join(this.getCognitoConstants().SPACE);\n    return encodeURIComponent(tokenScopesString);\n  }\n\n  /**\n   * Create the FQDN(fully qualified domain name) for authorization endpoint.\n   * @returns {string} url\n   */\n  getFQDNSignIn() {\n    if (this.state == null) {\n      this.state = this.generateRandomString(this.getCognitoConstants().STATELENGTH,\n        this.getCognitoConstants().STATEORIGINSTRING);\n    }\n\n    const identityProviderParam = this.IdentityProvider\n      ? this.getCognitoConstants().AMPERSAND.concat(\n        this.getCognitoConstants().DOMAIN_QUERY_PARAM_IDENTITY_PROVIDER,\n        this.getCognitoConstants().EQUALSIGN, this.IdentityProvider)\n      : '';\n    const tokenScopesString = this.getSpaceSeperatedScopeString();\n\n    var userContextDataParam = '';\n    var userContextData = this.getUserContextData();\n    if (userContextData) {\n      userContextDataParam = this.getCognitoConstants().AMPERSAND + this.getCognitoConstants().DOMAIN_QUERY_PARAM_USERCONTEXTDATA +\n        this.getCognitoConstants().EQUALSIGN + this.getUserContextData();\n    }\n\n    // Build the complete web domain to launch the login screen\n    const uri = this.getCognitoConstants().DOMAIN_SCHEME.concat(\n      this.getCognitoConstants().COLONDOUBLESLASH, this.getAppWebDomain(),\n      this.getCognitoConstants().SLASH, this.getCognitoConstants().DOMAIN_PATH_SIGNIN,\n      this.getCognitoConstants().QUESTIONMARK,\n      this.getCognitoConstants().DOMAIN_QUERY_PARAM_REDIRECT_URI,\n      this.getCognitoConstants().EQUALSIGN, encodeURIComponent(this.RedirectUriSignIn),\n      this.getCognitoConstants().AMPERSAND,\n      this.getCognitoConstants().DOMAIN_QUERY_PARAM_RESPONSE_TYPE,\n      this.getCognitoConstants().EQUALSIGN,\n      this.responseType, this.getCognitoConstants().AMPERSAND, this.getCognitoConstants().CLIENT_ID,\n      this.getCognitoConstants().EQUALSIGN, this.getClientId(),\n      this.getCognitoConstants().AMPERSAND, this.getCognitoConstants().STATE,\n      this.getCognitoConstants().EQUALSIGN, this.state, this.getCognitoConstants().AMPERSAND,\n      this.getCognitoConstants().SCOPE, this.getCognitoConstants().EQUALSIGN, tokenScopesString, identityProviderParam,\n      userContextDataParam);\n\n    return uri;\n  }\n\n  /**\n   * Sign out the user.\n   * @returns {void}\n   */\n  signOut() {\n    const URL = this.getFQDNSignOut();\n    this.signInUserSession = new CognitoAuthSession();\n    this.clearCachedTokensScopes();\n    this.launchUri(URL);\n  }\n\n  /**\n   * Create the FQDN(fully qualified domain name) for signout endpoint.\n   * @returns {string} url\n   */\n  getFQDNSignOut() {\n    const uri = this.getCognitoConstants().DOMAIN_SCHEME.concat(\n      this.getCognitoConstants().COLONDOUBLESLASH, this.getAppWebDomain(),\n      this.getCognitoConstants().SLASH, this.getCognitoConstants().DOMAIN_PATH_SIGNOUT,\n      this.getCognitoConstants().QUESTIONMARK,\n      this.getCognitoConstants().DOMAIN_QUERY_PARAM_SIGNOUT_URI,\n      this.getCognitoConstants().EQUALSIGN, encodeURIComponent(this.RedirectUriSignOut),\n      this.getCognitoConstants().AMPERSAND,\n      this.getCognitoConstants().CLIENT_ID,\n      this.getCognitoConstants().EQUALSIGN, this.getClientId());\n    return uri;\n  }\n\n  /**\n   * This method returns the encoded data string used for cognito advanced security feature.\n   * This would be generated only when developer has included the JS used for collecting the\n   * data on their client. Please refer to documentation to know more about using AdvancedSecurity\n   * features\n   **/\n  getUserContextData() {\n    if (typeof AmazonCognitoAdvancedSecurityData === \"undefined\") {\n      return;\n    }\n\n    var _username = \"\";\n    if (this.username) {\n      _username = this.username;\n    }\n\n    var _userpoolId = \"\";\n    if (this.userpoolId) {\n      _userpoolId = this.userpoolId;\n    }\n\n    if (this.advancedSecurityDataCollectionFlag) {\n      return AmazonCognitoAdvancedSecurityData.getData(_username, _userpoolId, this.clientId);\n    }\n  }\n\n  /**\n   * Helper method to let the user know if he has either a valid cached session \n   * or a valid authenticated session from the app integration callback.\n   * @returns {boolean} userSignedIn \n   */\n  isUserSignedIn() {\n    return (this.signInUserSession != null && this.signInUserSession.isValid()) ||\n      (this.getCachedSession() != null && this.getCachedSession().isValid());\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/CognitoAuth.js","\nimport * as Cookies from 'js-cookie';\n\n/** @class */\nexport default class CookieStorage {\n\n  /**\n   * Constructs a new CookieStorage object\n   * @param {object} data Creation options.\n   * @param {string} data.domain Cookies domain (mandatory).\n   * @param {string} data.path Cookies path (default: '/')\n   * @param {integer} data.expires Cookie expiration (in days, default: 365)\n   * @param {boolean} data.secure Cookie secure flag (default: true)\n   */\n  constructor(data) {\n    this.domain = data.domain;\n    if (data.path) {\n      this.path = data.path;\n    } else {\n      this.path = '/';\n    }\n    if (Object.prototype.hasOwnProperty.call(data, 'expires')) {\n      this.expires = data.expires;\n    } else {\n      this.expires = 365;\n    }\n    if (Object.prototype.hasOwnProperty.call(data, 'secure')) {\n      this.secure = data.secure;\n    } else {\n      this.secure = true;\n    }\n  }\n\n  /**\n   * This is used to set a specific item in storage\n   * @param {string} key - the key for the item\n   * @param {object} value - the value\n   * @returns {string} value that was set\n   */\n  setItem(key, value) {\n    Cookies.set(key, value, {\n      path: this.path,\n      expires: this.expires,\n      domain: this.domain,\n      secure: this.secure,\n    }\n    );\n    return Cookies.get(key);\n  }\n\n  /**\n   * This is used to get a specific key from storage\n   * @param {string} key - the key for the item\n   * This is used to clear the storage\n   * @returns {string} the data item\n   */\n  getItem(key) {\n    return Cookies.get(key);\n  }\n\n  /**\n   * This is used to remove an item from storage\n   * @param {string} key - the key being set\n   * @returns {string} value - value that was deleted\n   */\n  removeItem(key) {\n    return Cookies.remove(key, {\n      path: this.path,\n      domain: this.domain,\n      secure: this.secure,\n    }\n    );\n  }\n\n  /**\n   * This is used to clear the storage\n   * @returns {string} nothing\n   */\n  clear() {\n    const cookies = Cookies.get();\n    let index;\n    for (index = 0; index < cookies.length; ++index) {\n      Cookies.remove(cookies[index]);\n    }\n    return {};\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/CookieStorage.js","/*!\n * Amazon Cognito Auth SDK for JavaScript\n * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n * Licensed under the Apache License, Version 2.0 (the \"License\").\n * You may not use this file except in compliance with the License.\n * A copy of the License is located at\n *\n *         http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file.\n * This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\n * OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions\n * and limitations under the License.\n */\nconst monthNames =\n  ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\nconst weekNames = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\n/** @class */\nexport default class DateHelper {\n  /**\n   * @returns {string} The current time in \"ddd MMM D HH:mm:ss UTC YYYY\" format.\n   */\n  getNowString() {\n    const now = new Date();\n\n    const weekDay = weekNames[now.getUTCDay()];\n    const month = monthNames[now.getUTCMonth()];\n    const day = now.getUTCDate();\n\n    let hours = now.getUTCHours();\n    if (hours < 10) {\n      hours = `0${hours}`;\n    }\n\n    let minutes = now.getUTCMinutes();\n    if (minutes < 10) {\n      minutes = `0${minutes}`;\n    }\n\n    let seconds = now.getUTCSeconds();\n    if (seconds < 10) {\n      seconds = `0${seconds}`;\n    }\n\n    const year = now.getUTCFullYear();\n\n    // ddd MMM D HH:mm:ss UTC YYYY\n    const dateNow = `${weekDay} ${month} ${day} ${hours}:${minutes}:${seconds} UTC ${year}`;\n\n    return dateNow;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/DateHelper.js","const SELF = '_self';\n\nexport const launchUri = (url) => window.open(url, SELF);\n\n\n\n// WEBPACK FOOTER //\n// ./src/UriHelper.js","/*!\n * Amazon Cognito Auth SDK for JavaScript\n * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n * Licensed under the Apache License, Version 2.0 (the \"License\").\n * You may not use this file except in compliance with the License.\n * A copy of the License is located at\n *\n *         http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file.\n * This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\n * OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions\n * and limitations under the License.\n */\n\nexport { default as CognitoAccessToken } from './CognitoAccessToken';\nexport { default as CognitoIdToken } from './CognitoIdToken';\nexport { default as CognitoRefreshToken } from './CognitoRefreshToken';\nexport { default as CognitoTokenScopes } from './CognitoTokenScopes';\nexport { default as CognitoAuth } from './CognitoAuth';\nexport { default as CognitoAuthSession } from './CognitoAuthSession';\nexport { default as DateHelper } from './DateHelper';\nexport { default as StorageHelper } from './StorageHelper';\nexport { default as CookieStorage } from './CookieStorage';\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","/*!\n * JavaScript Cookie v2.2.0\n * https://github.com/js-cookie/js-cookie\n *\n * Copyright 2006, 2015 Klaus Hartl & Fagner Brack\n * Released under the MIT license\n */\n;(function (factory) {\n\tvar registeredInModuleLoader = false;\n\tif (typeof define === 'function' && define.amd) {\n\t\tdefine(factory);\n\t\tregisteredInModuleLoader = true;\n\t}\n\tif (typeof exports === 'object') {\n\t\tmodule.exports = factory();\n\t\tregisteredInModuleLoader = true;\n\t}\n\tif (!registeredInModuleLoader) {\n\t\tvar OldCookies = window.Cookies;\n\t\tvar api = window.Cookies = factory();\n\t\tapi.noConflict = function () {\n\t\t\twindow.Cookies = OldCookies;\n\t\t\treturn api;\n\t\t};\n\t}\n}(function () {\n\tfunction extend () {\n\t\tvar i = 0;\n\t\tvar result = {};\n\t\tfor (; i < arguments.length; i++) {\n\t\t\tvar attributes = arguments[ i ];\n\t\t\tfor (var key in attributes) {\n\t\t\t\tresult[key] = attributes[key];\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tfunction init (converter) {\n\t\tfunction api (key, value, attributes) {\n\t\t\tvar result;\n\t\t\tif (typeof document === 'undefined') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Write\n\n\t\t\tif (arguments.length > 1) {\n\t\t\t\tattributes = extend({\n\t\t\t\t\tpath: '/'\n\t\t\t\t}, api.defaults, attributes);\n\n\t\t\t\tif (typeof attributes.expires === 'number') {\n\t\t\t\t\tvar expires = new Date();\n\t\t\t\t\texpires.setMilliseconds(expires.getMilliseconds() + attributes.expires * 864e+5);\n\t\t\t\t\tattributes.expires = expires;\n\t\t\t\t}\n\n\t\t\t\t// We're using \"expires\" because \"max-age\" is not supported by IE\n\t\t\t\tattributes.expires = attributes.expires ? attributes.expires.toUTCString() : '';\n\n\t\t\t\ttry {\n\t\t\t\t\tresult = JSON.stringify(value);\n\t\t\t\t\tif (/^[\\{\\[]/.test(result)) {\n\t\t\t\t\t\tvalue = result;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {}\n\n\t\t\t\tif (!converter.write) {\n\t\t\t\t\tvalue = encodeURIComponent(String(value))\n\t\t\t\t\t\t.replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent);\n\t\t\t\t} else {\n\t\t\t\t\tvalue = converter.write(value, key);\n\t\t\t\t}\n\n\t\t\t\tkey = encodeURIComponent(String(key));\n\t\t\t\tkey = key.replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent);\n\t\t\t\tkey = key.replace(/[\\(\\)]/g, escape);\n\n\t\t\t\tvar stringifiedAttributes = '';\n\n\t\t\t\tfor (var attributeName in attributes) {\n\t\t\t\t\tif (!attributes[attributeName]) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tstringifiedAttributes += '; ' + attributeName;\n\t\t\t\t\tif (attributes[attributeName] === true) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tstringifiedAttributes += '=' + attributes[attributeName];\n\t\t\t\t}\n\t\t\t\treturn (document.cookie = key + '=' + value + stringifiedAttributes);\n\t\t\t}\n\n\t\t\t// Read\n\n\t\t\tif (!key) {\n\t\t\t\tresult = {};\n\t\t\t}\n\n\t\t\t// To prevent the for loop in the first place assign an empty array\n\t\t\t// in case there are no cookies at all. Also prevents odd result when\n\t\t\t// calling \"get()\"\n\t\t\tvar cookies = document.cookie ? document.cookie.split('; ') : [];\n\t\t\tvar rdecode = /(%[0-9A-Z]{2})+/g;\n\t\t\tvar i = 0;\n\n\t\t\tfor (; i < cookies.length; i++) {\n\t\t\t\tvar parts = cookies[i].split('=');\n\t\t\t\tvar cookie = parts.slice(1).join('=');\n\n\t\t\t\tif (!this.json && cookie.charAt(0) === '\"') {\n\t\t\t\t\tcookie = cookie.slice(1, -1);\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tvar name = parts[0].replace(rdecode, decodeURIComponent);\n\t\t\t\t\tcookie = converter.read ?\n\t\t\t\t\t\tconverter.read(cookie, name) : converter(cookie, name) ||\n\t\t\t\t\t\tcookie.replace(rdecode, decodeURIComponent);\n\n\t\t\t\t\tif (this.json) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tcookie = JSON.parse(cookie);\n\t\t\t\t\t\t} catch (e) {}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (key === name) {\n\t\t\t\t\t\tresult = cookie;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!key) {\n\t\t\t\t\t\tresult[name] = cookie;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {}\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\tapi.set = api;\n\t\tapi.get = function (key) {\n\t\t\treturn api.call(api, key);\n\t\t};\n\t\tapi.getJSON = function () {\n\t\t\treturn api.apply({\n\t\t\t\tjson: true\n\t\t\t}, [].slice.call(arguments));\n\t\t};\n\t\tapi.defaults = {};\n\n\t\tapi.remove = function (key, attributes) {\n\t\t\tapi(key, '', extend(attributes, {\n\t\t\t\texpires: -1\n\t\t\t}));\n\t\t};\n\n\t\tapi.withConverter = init;\n\n\t\treturn api;\n\t}\n\n\treturn init(function () {});\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/js-cookie/src/js.cookie.js\n// module id = 14\n// module chunks = 0"],"sourceRoot":""}